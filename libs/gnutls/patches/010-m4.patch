--- a/m4/stddef_h.m4
+++ b/m4/stddef_h.m4
@@ -9,7 +9,7 @@ dnl A placeholder for <stddef.h>, for pl
 AC_DEFUN_ONCE([gl_STDDEF_H],
 [
   AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GNUTLS])
 
   dnl Persuade OpenBSD <stddef.h> to declare max_align_t.
   AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
--- a/m4/stdint.m4
+++ b/m4/stdint.m4
@@ -15,7 +15,7 @@ AC_DEFUN_ONCE([gl_STDINT_H],
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
 
   AC_REQUIRE([gl_LIMITS_H])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
 
   dnl For backward compatibility. Some packages may still be testing these
   dnl macros.
--- a/m4/vasnprintf.m4
+++ b/m4/vasnprintf.m4
@@ -32,16 +32,16 @@ AC_DEFUN([gl_REPLACE_VASNPRINTF],
 # Prerequisites of lib/printf-args.h, lib/printf-args.c.
 AC_DEFUN([gl_PREREQ_PRINTF_ARGS],
 [
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GNUTLS])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
 ])
 
 # Prerequisites of lib/printf-parse.h, lib/printf-parse.c.
 AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 [
   AC_REQUIRE([gl_FEATURES_H])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GNUTLS])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
   AC_REQUIRE([AC_TYPE_SIZE_T])
   AC_CHECK_TYPE([ptrdiff_t], ,
     [AC_DEFINE([ptrdiff_t], [long],
@@ -54,8 +54,8 @@ AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF],
 [
   AC_REQUIRE([AC_FUNC_ALLOCA])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GNUTLS])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
   AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
   dnl Use the _snprintf function only if it is declared (because on NetBSD it
   dnl is defined as a weak alias of snprintf; we prefer to use the latter).
--- a/m4/wchar_h.m4
+++ b/m4/wchar_h.m4
@@ -27,7 +27,7 @@ AC_DEFUN_ONCE([gl_WCHAR_H],
 
   AC_REQUIRE([gl_FEATURES_H])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/m4/wchar_t.m4
+++ b/m4/wchar_t.m4
@@ -8,7 +8,7 @@ dnl From Bruno Haible.
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GNUTLS],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(
--- a/m4/wint_t.m4
+++ b/m4/wint_t.m4
@@ -9,7 +9,7 @@ dnl Test whether <wchar.h> has the 'wint
 dnl <wchar.h> or <wctype.h> would, if present, override 'wint_t'.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GNUTLS],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
--- a/src/gl/m4/gnulib-comp.m4
+++ b/src/gl/m4/gnulib-comp.m4
@@ -1163,8 +1163,8 @@ changequote([, ])dnl
   fi
   gl_UNISTD_MODULE_INDICATOR([sleep])
   AC_CHECK_DECLS_ONCE([alarm])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GNUTLS])
+  AC_REQUIRE([gt_TYPE_WINT_T_GNUTLS])
   gl_FUNC_STRERROR_R
   if test $HAVE_DECL_STRERROR_R = 0 || test $REPLACE_STRERROR_R = 1; then
     AC_LIBOBJ([strerror_r])
